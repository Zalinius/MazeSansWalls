:alias tn v0 #also used by internal ops, like jump0
:alias tx v1 # PERMANENT
:alias ty v2 # PERMANENT

:alias temp v7
:alias temp2 v8
:alias notsure v9
:alias game_state vA
:alias ZERO vE
:alias carry_flag vF

:const W 5
:const A 7
:const S 8
:const D 9
:const E 6 #Interact key

:const WIDTH 8
:const HEIGHT 8
:const SIZE 8 #memory label size
:const CONT 12 #memory offset between main and v4 := key

:const TRUE  1
:const FALSE 0

:const THREE_BIT_MASK 0b00000111

:const KEY_FOUND 0b00000001
:const FLAG_B 0b00000010
:const FLAG_C 0b00000100
:const FLAG_D 0b00001000
:const FLAG_E 0b00010000
:const FLAG_F 0b00100000
:const FLAG_G 0b01000000
:const FLAG_H 0b10000000

: main
  
  tx := 1
  ty := 1
	
	loop
		clear
		drawframe
    computeIoffset

		v4 := key
		
		if v4 == W then ty -= 1
		if v4 == A then tx -= 1
		if v4 == S then ty += 1
		if v4 == D then tx += 1
		if v4 == E then interact
		
		if tx == WIDTH  then tx := 0
		if ty == HEIGHT then ty := 0
		
		if tx == 255 then tx := WIDTH
  	if ty == 255 then ty := HEIGHT
		if tx == WIDTH  then tx -= 1
		if ty == HEIGHT then ty -= 1

again
	
: interact
if tx == 4 begin
  if ty == 4 then teleport
end
hasKey
if v0 == FALSE begin
    if tx == 3 begin
		    if ty == 0 then game_state |= temp
		end
end
: teleport
tx := random 0b00000111
ty := random 0b00000111
return
: hasKey #puts boolean into v0
v0 := game_state
temp := KEY_FOUND
v0 &= temp
return
	
: computeIoffset #into tn
  tn := tx
	tn += ty
	tn += ty
	tn += ty
	tn += ty
	tn += ty
	tn += ty
	tn += ty
	tn += ty
	tn <<= tn
	tn <<= tn
	jump0 tile-table
	return
	
: drawHPath
  v4 := 0
  v5 := 12
	
	loop
	i  := hPathA
	computeHash
	temp := 0b00011000
  temp &=	v0
	i  += temp
	
  sprite v4 v5 8
 		v4 += 8
	  while v4 != 64 
	again
	
	return

: drawVPath
  v4 := 28
  v5 := 0
	
	loop
  	i  := vPathA
	  computeHash
	  temp := 0b00011000
    v0 &=	temp
	  i  += v0
	
    sprite v4 v5 8
 		v5 += 8
	  
		while v5 != 32 
	again

 return

: computeHash
	v0 += 7
	v0 += v4
	v0 += v5
	shiftAndCheck
	shiftAndCheck
	v0 -= v4
	v0 -= v5
	

  v0 += tx
	shiftAndCheck
	shiftAndCheck
	shiftAndCheck
	shiftAndCheck
  v0 -= tx
	
  v0 += ty
	shiftAndCheck
	shiftAndCheck
	shiftAndCheck
  v0 -= ty
	
	return
	
: shiftAndCheck
 	v0 <<= v0
  if carry_flag == 1 then v0 += 1
	return
		
: drawframe
  v4 := 0
  v5 := 0
	
	
  i := hline
	loop
	  sprite v4 v5 1
		v4 += 8
    while v4 != 64
	again

  v4 := 0
  v5 := 31

	loop
	  sprite v4 v5 1
		v4 += 8
    while v4 != 64
	again
	
	i := vline
  v4 := 0
  v5 := 1
	
	loop
	  sprite v4 v5 1
		v5 += 1
    while v5 != 31
	again

  v4 := 63
  v5 := 1
	loop
	  sprite v4 v5 1
		v5 += 1
    while v5 != 31
	again
	

  return
	
	
: tile-table
  drawAA        return
  drawBA        return
  drawCA        return
  drawDA        return
  drawEA        return
  drawFA        return
  drawGA        return
  drawHA        return
  drawAB        return
  drawBB        return
  drawCB        return
  drawDB        return
  drawEB        return
  drawFB        return
  drawGB        return
  drawHB        return
  drawAC        return
  drawBC        return
  drawCC        return
  drawDC        return
  drawEC        return
  drawFC        return
  drawGC        return
  drawHC        return
  drawAD        return
  drawBD        return
  drawCD        return
  drawDD        return
  drawED        return
  drawFD        return
  drawGD        return
  drawHD        return
  drawAE        return
  drawBE        return
  drawCE        return
  drawDE        return
  drawEE        return
  drawFE        return
  drawGE        return
  drawHE        return
  drawAF        return
  drawBF        return
  drawCF        return
  drawDF        return
  drawEF        return
  drawFF        return
  drawGF        return
  drawHF        return
  drawAG        return
  drawBG        return
  drawCG        return
  drawDG        return
  drawEG        return
  drawFG        return
  drawGG        return
  drawHG        return
  drawAH        return
  drawBH        return
  drawCH        return
  drawDH        return
  drawEH        return
  drawFH        return
  drawGH        return
  drawHH        return

: drawAA
  i := upleft
  sprite v9 v9 8
  return

: drawBA
  i := up
  sprite v9 v9 8
  return

: drawCA
  i := upright
  sprite v9 v9 8
  return

: drawDA
  hasKey
  if v0 == FALSE then drawKey
  return

: drawEA
  drawVPath
  return

: drawFA
  sprite v9 v9 8
  return

: drawGA
  sprite v9 v9 8
  return

: drawHA
  sprite v9 v9 8
  return

: drawAB
  i := left
  sprite v9 v9 8
  return

: drawBB
  i := center
  sprite v9 v9 8
  return

: drawCB
  i := right
  sprite v9 v9 8
  return

: drawDB
  sprite v9 v9 8
  return

: drawEB
  drawVPath
  return

: drawFB
  sprite v9 v9 8
  return

: drawGB
  sprite v9 v9 8
  return

: drawHB
  sprite v9 v9 8
  return

: drawAC
  i := downleft
  sprite v9 v9 8
  return

: drawBC
  i := down
  sprite v9 v9 8
  return

: drawCC
  i := downright
  sprite v9 v9 8
  return

: drawDC
  sprite v9 v9 8
  return

: drawEC
  drawVPath
  return

: drawFC
  sprite v9 v9 8
  return

: drawGC
  sprite v9 v9 8
  return

: drawHC
  sprite v9 v9 8
  return

: drawAD
  sprite v9 v9 8
  return

: drawBD
  sprite v9 v9 8
  return

: drawCD
  sprite v9 v9 8
  return  sprite v9 v9 8


: drawDD
  i := spiralSprite
  sprite v9 v9 8
  return

: drawED
  drawVPath
  return

: drawFD
  sprite v9 v9 8
  return

: drawGD
  sprite v9 v9 8
  return

: drawHD
  sprite v9 v9 8
  return

: drawAE
  drawHPath
  return

: drawBE
  drawHPath
  return

: drawCE
  drawHPath
	return

: drawDE
  drawHPath
  return

: drawEE
  drawHPath
  drawVPath
  return

: drawFE
  drawHPath
  return

: drawGE
  drawHPath
  return

: drawHE
  drawHPath
  return

: drawAF
  sprite v9 v9 8
  return

: drawBF
  sprite v9 v9 8
  return

: drawCF
  sprite v9 v9 8
  return

: drawDF
  sprite v9 v9 8
  return

: drawEF
  drawVPath
  return

: drawFF
  sprite v9 v9 8
  return

: drawGF
  sprite v9 v9 8
  return

: drawHF
  sprite v9 v9 8
  return

: drawAG
  sprite v9 v9 8
  return

: drawBG
  sprite v9 v9 8
  return

: drawCG
  sprite v9 v9 8
  return

: drawDG
  sprite v9 v9 8
  return

: drawEG
  drawVPath
  return

: drawFG
  sprite v9 v9 8
  return

: drawGG
  sprite v9 v9 8
  return

: drawHG
  sprite v9 v9 8
  return

: drawAH
  sprite v9 v9 8
  return

: drawBH
  sprite v9 v9 8
  return

: drawCH
  sprite v9 v9 8
  return

: drawDH
  sprite v9 v9 8
  return

: drawEH
  drawVPath
  return

: drawFH
  sprite v9 v9 8
  return

: drawGH
  sprite v9 v9 8
  return

: drawHH
  sprite v9 v9 8
  return


: drawKey
  i := keySprite
  sprite v9 v9 8
  return
	
: spiralSprite
0x00 0x3C 0x42 0x92 0xAA 0x9C 0x41 0x3E

: keySprite
0x3C 0x24 0x24 0x3C 0x10 0x18 0x10 0x1C

: hPathA
0xFF 0x26 0xFF 0x52 0x52 0xFF 0x92 0xFF
: hPathB
0xFF 0x52 0xFF 0x49 0x49 0xFF 0xA4 0xFF
: hPathC
0xFF 0x16 0xFF 0x49 0x6A 0xFF 0x22 0xBF
: hPathD
0xFF 0xA6 0xFF 0x4A 0x52 0xFF 0xA5 0xFF

: vPathA
0xBD 0xA7 0xFD 0xA5 0xA7 0xFD 0xA5 0xE7
: vPathB
0xFD 0xA7 0xA5 0xFD 0xA7 0xFD 0xA7 0xA5
: vPathC	
0xBF 0xA5 0xFD 0xA7 0xFD 0xA5 0xFD 0xA7
: vPathD
0xAF 0xE7 0xA5 0xBD 0xE5 0xA7 0xBD 0xE5

: hline
0xFF
: vline
0b10000000

: upleft
0x00 0x7C 0x40 0x50 0x48 0x44 0x02 0x00
: up
0x00 0x18 0x3C 0x7E 0x18 0x18 0x18 0x00
: upright
0x00 0x7E 0x02 0x0A 0x12 0x22 0x42 0x00

: left
0x00 0x10 0x30 0x7E 0x7E 0x30 0x10 0x00
: center
0x00 0x18 0x3C 0x7E 0x7E 0x3C 0x18 0x00
: right
0x00 0x08 0x0C 0x7E 0x7E 0x0C 0x08 0x00

: downleft
0x00 0x00 0x00 0x24 0x28 0x30 0x3C 0x00
: down
0x00 0x18 0x18 0x18 0x7E 0x3C 0x18 0x00
: downright
0x00 0x00 0x00 0x12 0x0A 0x06 0x1E 0x00
